version: "2"
# global overrides used by multiple tables
overrides:
  go:
    overrides:
      - db_type: "pg_catalog.bool"
        go_type:
          import: "github.com/jackc/pgx/v5/pgtype"
          type: "Bool"
      - db_type: "bool"
        go_type:
          import: "github.com/jackc/pgx/v5/pgtype"
          type: "Bool"
      - db_type: "pg_catalog.int4"
        go_type:
          import: "github.com/jackc/pgx/v5/pgtype"
          type: "Int4"
      - db_type: "pg_catalog.int8"
        go_type:
          import: "github.com/jackc/pgx/v5/pgtype"
          type: "Int8"
      - db_type: "text"
        go_type:
          import: "github.com/jackc/pgx/v5/pgtype"
          type: "Text"
      - column: "workspaces.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "workspaces.agent_pool_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
          pointer: true
      - column: "teams.team_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "repo_connections.vcs_provider_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "ingress_attributes.configuration_version_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "runs.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "workspaces.organization_name"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "OrganizationName"
      - db_type: "ingress_attributes"
        go_type:
          type: IngressAttributeModel
          pointer: true
    rename:
      ingress_attribute: IngressAttributeModel
sql:
- engine: "postgresql"
  queries: "./internal/organization/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go: &go
      out: "./internal/organization"
      sql_package: "pgx/v5"
      omit_unused_structs: true
      output_db_file_name: "sqlc.go"
      output_models_file_name: models.go
      emit_methods_with_db_argument: true
      initialisms:
      - "id"
      - "vcs"
      - "cli"
      - "url"
      - "sso"
      - "sha"
      - "html"
      - "json"
      - "hcl"
      - "ip"
      rename:
        organization: Model
        organization_token: TokenModel
      overrides:
      - column: "organizations.organization_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "organizations.name"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "OrganizationName"
      - column: "organization_tokens.organization_token_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "organization_tokens.organization_name"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "OrganizationName"
- engine: "postgresql"
  queries: "./internal/workspace/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/workspace"
      omit_unused_structs: false
      rename:
        workspace: Model
        tag: TagModel
      overrides:
      - db_type: "workspace_permissions"
        go_type:
          type: "WorkspacePermission"
      - column: "tags.tag_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "tags.organization_name"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "OrganizationName"
      - column: "workspaces.current_state_version_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
          pointer: true
      - column: "workspaces.lock_run_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
          pointer: true
      - column: "workspaces.lock_user_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
          pointer: true
      - column: "workspaces.latest_run_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
          pointer: true
      - column: "workspace_permissions.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "workspace_permissions.team_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "workspace_tags.tag_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "workspace_tags.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
- engine: "postgresql"
  queries: "./internal/run/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/run"
      omit_unused_structs: false
      rename:
        run: Model
        phase: PhaseModel
        phase_status: PhaseStatusModel
        phase_status_timestamp: PhaseStatusTimestampModel
        run_status_timestamp: RunStatusTimestampModel
        variable: VariableModel
      overrides:
      - db_type: "report"
        go_type:
          type: "Report"
          pointer: true
      - db_type: "run_variables"
        go_type:
          type: "RunVariable"
      - db_type: "run_status_timestamps"
        go_type:
          type: "RunStatusTimestampModel"
      - db_type: "phase_status_timestamps"
        go_type:
          type: "PhaseStatusTimestampModel"
      - column: "applies.run_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "phase_status_timestamps.run_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "plans.run_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "run_status_timestamps.run_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "run_variables.run_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "runs.run_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "runs.configuration_version_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
- engine: "postgresql"
  queries: "./internal/configversion/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/configversion"
      omit_unused_structs: false
      rename:
        configuration_version: Model
        configuration_version_status_timestamp: StatusTimestampModel
      overrides:
      - column: "configuration_version_status_timestamps.configuration_version_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "configuration_versions.configuration_version_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "configuration_versions.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - db_type: "configuration_version_status_timestamps"
        go_type:
          type: StatusTimestampModel
- engine: "postgresql"
  queries: "./internal/notifications/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/notifications"
      omit_unused_structs: true
      rename:
        notification_configuration: ConfigModel
      overrides:
      - column: "notification_configurations.notification_configuration_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "notification_configurations.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
- engine: "postgresql"
  queries: "./internal/user/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/user"
      omit_unused_structs: false
      rename:
        user: Model
        team: TeamModel
      overrides:
      - column: "users.user_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - db_type: "teams"
        go_type:
          type: "TeamModel"
      - column: "tokens.token_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "team_memberships.team_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "teams.organization_name"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "OrganizationName"
- engine: "postgresql"
  queries: "./internal/team/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/team"
      omit_unused_structs: true
      rename:
        team: Model
        token: TokenModel
      overrides:
      - column: "team_tokens.team_token_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "team_tokens.team_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "teams.organization_name"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "OrganizationName"
- engine: "postgresql"
  queries: "./internal/repohooks/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/repohooks"
      omit_unused_structs: true
      rename:
      overrides:
      - column: "repohooks.vcs_provider_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "vcs_providers.vcs_provider_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
- engine: "postgresql"
  queries: "./internal/github/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/github"
      omit_unused_structs: true
      rename:
      overrides:
      - column: "github_app_installs.vcs_provider_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
- engine: "postgresql"
  queries: "./internal/connections/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/connections"
      omit_unused_structs: true
      rename:
      overrides:
      - column: "repo_connections.module_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
          pointer: true
      - column: "repo_connections.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
          pointer: true
      - column: "repo_connections.vcs_provider_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
- engine: "postgresql"
  queries: "./internal/vcsprovider/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/vcsprovider"
      omit_unused_structs: false
      rename:
        vcs_provider: Model
      overrides:
      - column: "vcs_providers.vcs_provider_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "vcs_providers.organization_name"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "OrganizationName"
      - db_type: "github_apps"
        go_type:
          type: "GithubApp"
          pointer: true
      - db_type: "github_app_installs"
        go_type:
          type: "GithubAppInstall"
          pointer: true
- engine: "postgresql"
  queries: "./internal/runner/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/runner"
      omit_unused_structs: true
      rename:
        runner: RunnerModel
        runner_status: RunnerStatusModel
        job: JobModel
        job_status: JobStatusModel
      overrides:
      - db_type: "agent_pools"
        go_type:
          type: "AgentPool"
          pointer: true
      - column: "agent_pools.agent_pool_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "agent_pools.organization_name"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "OrganizationName"
      - column: "agent_pool_allowed_workspaces.agent_pool_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "agent_pool_allowed_workspaces.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "agent_tokens.agent_token_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "agent_tokens.agent_pool_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "jobs.job_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "jobs.run_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "jobs.runner_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
          pointer: true
      - column: "runners.runner_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "runners.agent_pool_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
          pointer: true
- engine: "postgresql"
  queries: "./internal/state/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/state"
      omit_unused_structs: true
      rename:
      overrides:
      - db_type: "state_version_outputs"
        go_type:
          type: "StateVersionOutput"
      - column: "state_version_outputs.state_version_output_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "state_version_outputs.state_version_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "state_versions.state_version_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "state_versions.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
- engine: "postgresql"
  queries: "./internal/releases/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/releases"
      omit_unused_structs: true
      rename:
- engine: "postgresql"
  queries: "./internal/logs/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/logs"
      omit_unused_structs: true
      rename:
      overrides:
      - column: "logs.run_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "logs.chunk_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
- engine: "postgresql"
  queries: "./internal/variable/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/variable"
      omit_unused_structs: true
      rename:
        variable: VariableModel
        variable_category: VariableCategoryModel
        variable_set: VariableSetModel
        workspace_variable: WorkspaceVariableModel
      overrides:
      - db_type: "variables"
        go_type:
          type: VariableModel
      - column: "variable_set_variables.variable_set_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "variable_set_variables.variable_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "variable_set_workspaces.variable_set_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "variable_set_workspaces.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "variable_sets.variable_set_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "variables.variable_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "workspace_variables.workspace_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "workspace_variables.variable_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "variable_sets.organization_name"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "OrganizationName"
- engine: "postgresql"
  queries: "./internal/module/queries.sql"
  schema: "./internal/sql/migrations"
  gen:
    go:
      <<: *go
      out: "./internal/module"
      omit_unused_structs: true
      rename:
        module_version: ModuleVersionModel
        module: ModuleModel
      overrides:
      - column: "module_tarballs.module_version_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - db_type: "module_versions"
        go_type:
          type: "ModuleVersionModel"
      - column: "module_versions.module_version_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "module_versions.module_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "modules.module_id"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "ID"
      - column: "modules.organization_name"
        go_type:
          import: "github.com/leg100/otf/internal/resource"
          type: "OrganizationName"
