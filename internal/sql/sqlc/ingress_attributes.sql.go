// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: ingress_attributes.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
	"github.com/leg100/otf/internal/resource"
)

const insertIngressAttributes = `-- name: InsertIngressAttributes :exec
INSERT INTO ingress_attributes (
    branch,
    commit_sha,
    commit_url,
    pull_request_number,
    pull_request_url,
    pull_request_title,
    sender_username,
    sender_avatar_url,
    sender_html_url,
    identifier,
    tag,
    is_pull_request,
    on_default_branch,
    configuration_version_id
) VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8,
    $9,
    $10,
    $11,
    $12,
    $13,
    $14
)
`

type InsertIngressAttributesParams struct {
	Branch                 pgtype.Text
	CommitSHA              pgtype.Text
	CommitURL              pgtype.Text
	PullRequestNumber      pgtype.Int4
	PullRequestURL         pgtype.Text
	PullRequestTitle       pgtype.Text
	SenderUsername         pgtype.Text
	SenderAvatarURL        pgtype.Text
	SenderHTMLURL          pgtype.Text
	Identifier             pgtype.Text
	Tag                    pgtype.Text
	IsPullRequest          pgtype.Bool
	OnDefaultBranch        pgtype.Bool
	ConfigurationVersionID resource.ID
}

func (q *Queries) InsertIngressAttributes(ctx context.Context, arg InsertIngressAttributesParams) error {
	_, err := q.db.Exec(ctx, insertIngressAttributes,
		arg.Branch,
		arg.CommitSHA,
		arg.CommitURL,
		arg.PullRequestNumber,
		arg.PullRequestURL,
		arg.PullRequestTitle,
		arg.SenderUsername,
		arg.SenderAvatarURL,
		arg.SenderHTMLURL,
		arg.Identifier,
		arg.Tag,
		arg.IsPullRequest,
		arg.OnDefaultBranch,
		arg.ConfigurationVersionID,
	)
	return err
}
