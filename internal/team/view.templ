package team

import (
	"github.com/leg100/otf/internal/http/html/components"
	"github.com/leg100/otf/internal/http/html/components/paths"
	"github.com/leg100/otf/internal/organization"
	"github.com/leg100/otf/internal/resource"
)

templ newTeamView(organization organization.Name) {
	@components.Layout(components.LayoutProps{
		Title:        "new team",
		Organization: organization,
		Breadcrumbs: []components.Breadcrumb{
			{Name: "teams", Link: paths.Teams(organization)},
			{Name: "new"},
		},
	}) {
		<form class="flex flex-col gap-2" action={ paths.CreateTeam(organization) } method="POST">
			<div class="field">
				<label for="name">Name</label>
				<input class="input w-80" type="text" name="name" id="name" required/>
			</div>
			<div>
				<button class="btn" id="create-team-button">Create team</button>
			</div>
		</form>
	}
}

type listTeamsProps struct {
	organization  organization.Name
	teams         *resource.Page[*Team]
	canCreateTeam bool
}

type listOptions struct{}

templ listTeams(props listTeamsProps) {
	@components.Layout(components.LayoutProps{
		Title:        "teams",
		Organization: props.organization,
		Breadcrumbs: []components.Breadcrumb{
			{Name: "teams"},
		},
		ContentActions: listTeamsActions(props),
	}) {
		<div id="content-list">
			@components.Table(&table{}, props.teams, listOptions{}, "page-results")
		</div>
	}
}

type table struct{}

templ (t table) Header(opts listOptions) {
	<th>Name</th>
	<th>ID</th>
}

templ (t table) Row(team *Team, opts listOptions) {
	<tr id={ "item-team-" + team.Name } x-data={ components.BlockLink(paths.Team(team.ID)) }>
		<td>
			{ team.Name }
		</td>
		<td>
			@components.Identifier(team.ID)
		</td>
	</tr>
}

templ listTeamsActions(props listTeamsProps) {
	if props.canCreateTeam {
		<form action={ paths.NewTeam(props.organization) } method="GET">
			<button class="btn" id="new-team-button">
				New Team
			</button>
		</form>
	}
}
