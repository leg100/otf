package components

import (
	"github.com/leg100/otf/internal"
	"github.com/leg100/otf/internal/http/html/components/paths"
	"github.com/leg100/otf/internal/resource"
)

type Breadcrumb struct {
	Name string
	Link templ.SafeURL
}

type LayoutProps struct {
	Title          string
	Organization   resource.ID
	Breadcrumbs    []Breadcrumb
	ContentActions templ.Component
	ContentLinks   templ.Component
	ContentMenu    templ.Component
	PreContent     templ.Component
	PostContent    templ.Component
	Menu           templ.Component
}

templ Layout(props LayoutProps) {
	@BareLayout(BareLayoutProps{
		Title:        props.Title,
		Organization: props.Organization,
		PreContent:   props.PreContent,
		PostContent:  props.PostContent,
	}) {
		<div class="my-2 mx-4">
			<div class="flex flex-wrap items-center gap-4 pb-2 text-xl/9">
				<div class="flex">
					<span>
						for i, crumb := range props.Breadcrumbs {
							<span class={ templ.KV("font-bold", i == len(props.Breadcrumbs)-1) }>
								if crumb.Link != "" {
									<a
										href={ crumb.Link }
									>{ crumb.Name }</a>
								} else {
									{ crumb.Name }
								}
								if i < (len(props.Breadcrumbs) - 1) {
									/&nbsp;
								}
							</span>
						}
					</span>
				</div>
				<div>
					if props.ContentActions != nil {
						@props.ContentActions
					}
				</div>
				<ul class="flex grow items-center justify-end gap-4">
					if props.ContentLinks != nil {
						@props.ContentLinks
					}
				</ul>
			</div>
			if props.ContentMenu != nil {
				@props.ContentMenu
			}
			<div class="flex flex-col gap-2 mb-4" id="content">
				{ children... }
			</div>
		</div>
	}
}

type BareLayoutProps struct {
	Title        string
	Organization resource.ID
	Menu         templ.Component
	PreContent   templ.Component
	PostContent  templ.Component
}

templ BareLayout(props BareLayoutProps) {
	{{
		var menu templ.Component
		if props.Organization != nil {
			menu = organizationMenu(props.Organization)
		} else if Authenticated(ctx) {
			menu = siteMenu()
		}
	}}
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<script src={ AssetPath(ctx, "/static/js/theme-change.2.0.2.js") }></script>
			<script async crossorigin="anonymous">
				// Prevents page flicker with non-default themes:
				// https://github.com/saadeghi/theme-change/issues/28
				var selectedTheme = localStorage.getItem("theme");
				if(selectedTheme) {
					document.documentElement.setAttribute("data-theme", selectedTheme);
				}
			</script>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			if props.PreContent != nil {
				@props.PreContent
			}
			<title>{ props.Title } | otf</title>
			<link rel="icon" type="image/svg+xml" href={ AssetPath(ctx, "/static/images/icon.svg") }/>
			<script src={ AssetPath(ctx, "/static/js/main.js") }></script>
			<script src={ AssetPath(ctx, "/static/js/htmx.2.0.4.min.js") }></script>
			<script src={ AssetPath(ctx, "/static/js/htmx-sse.2.2.2.js") }></script>
			<script src={ AssetPath(ctx, "/static/js/htmx-ext-ws.2.0.2.js") }></script>
			<script defer src={ AssetPath(ctx, "/static/js/alpine.3.14.8.min.js") }></script>
			<link rel="stylesheet" href={ AssetPath(ctx, "/static/css/output.css") }/>
		</head>
		<!--<body class="flex-col m-0 min-h-screen font-sans">-->
		<body class="min-h-screen grid grid-rows-[auto_1fr_auto] grid-cols-[200px_3fr]">
			<header class="col-span-2 border-b-1 border-base-content/30">
				@navbar(props.Organization)
			</header>
			if menu != nil {
				<div class="border-r-1 border-base-content/30">
					@menu
				</div>
			}
			<main
				class={
					templ.KV("col-span-2", menu == nil),
					templ.KV("max-w-7xl", menu != nil),
				}
			>
				@Flashes()
				{ children... }
			</main>
			<footer class="col-span-2 border-t-1 border-base-content/30">
				@footer()
			</footer>
			if props.PostContent != nil {
				@props.PostContent
			}
		</body>
	</html>
}

templ navbar(organization resource.ID) {
	<!--<div class="navbar bg-base-100 px-2 flex flex-wrap justify-between items-center gap-6 my-0 mx-auto p-1 font-mono">-->
	<div class="navbar bg-base-100 min-h-1">
		<div class="flex-1 flex gap-10">
			<img src={ AssetPath(ctx, "/static/images/logo.svg") } alt="logo"/>
			if organization != nil {
				<div class="flex gap-2 items-center">
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 21h19.5m-18-18v18m10.5-18v18m6-13.5V21M6.75 6.75h.75m-.75 3h.75m-.75 3h.75m3-6h.75m-.75 3h.75m-.75 3h.75M6.75 21v-3.375c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21M3 3h12m-.75 4.5H21m-3.75 3.75h.008v.008h-.008v-.008Zm0 3h.008v.008h-.008v-.008Zm0 3h.008v.008h-.008v-.008Z"></path>
					</svg>
					<span>{ organization.String() }</span>
				</div>
			}
		</div>
		<div class="flex items-center">
			if Authenticated(ctx) {
				<div class="">
					<a class="btn btn-ghost btn-sm font-normal" href={ paths.Organizations() }>organizations</a>
				</div>
				<div class="">
					<a class="btn btn-ghost btn-sm font-normal" href={ paths.Admin() }>site</a>
				</div>
				<div class="">
					<a class="btn btn-ghost btn-sm font-normal" href={ paths.Profile() }>profile</a>
				</div>
			}
			@themeChooser()
		</div>
	</div>
}

templ footer() {
	<div class="py-0.5 text-xs font-mono">
		<div class="flex justify-between gap-4 max-w-2xl py-0.5 my-0 mx-auto">
			<div></div>
			<div class="footer-version">
				<a href="https://github.com/leg100/otf">{ internal.Version }</a>
			</div>
			<div class="footer-site-login">
				if !Authenticated(ctx) {
					<a href={ paths.AdminLogin() }>site admin</a>
				}
			</div>
		</div>
	</div>
}
