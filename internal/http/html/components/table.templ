package components

import (
	"fmt"
	"github.com/leg100/otf/internal/resource"
)

type Tabular[T any] interface {
	Header() templ.Component
	Row(T) templ.Component
}

templ Table[T any](tabular Tabular[T], page *resource.Page[T]) {
	<div id="page-results">
		if len(page.Items) > 0 {
			<table>
				<thead>
					<tr>
						@tabular.Header()
					</tr>
				</thead>
				<tbody>
					for _, item := range page.Items {
						@tabular.Row(item)
					}
				</tbody>
			</table>
		} else {
			No items currently exist.
		}
		@TablePaginationWidget(page)
	</div>
}

templ TablePaginationWidget[T any](page *resource.Page[T]) {
	{{
		info, err := newPageInfo(ctx, page)
		if err != nil {
			return err
		}
	}}
	<div class="flex p-4 gap-2 justify-end items-center">
		@pageSizeSelector()
		<div class="badge badge-outline badge-neutral" id="page-info">
			{ fmt.Sprintf("%d-%d of %d", info.firstItemNumber, info.lastItemNumber, page.TotalCount) }
		</div>
		<div class="join">
			if info.previousPageURL != nil {
				<button class="join-item btn btn-sm">
					<a id="prev-page-link" href={ *info.previousPageURL }>Previous Page</a>
				</button>
			}
			if info.nextPageURL != nil {
				<button class="join-item btn btn-sm">
					<a id="next-page-link" href={ *info.nextPageURL }>Next Page</a>
				</button>
			}
		</div>
	</div>
}
