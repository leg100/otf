package components

import (
	"errors"
	"fmt"
	"github.com/leg100/otf/internal/http/html"
)

var flashColors = map[html.FlashType]string{
	html.FlashSuccessType: "alert-success",
	html.FlashWarningType: "alert-warning",
	html.FlashErrorType:   "alert-error",
}

var flashIcons = map[html.FlashType]templ.Component{
	html.FlashSuccessType: successIcon(),
	html.FlashWarningType: warningIcon(),
	html.FlashErrorType:   errorIcon(),
}

templ successIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 shrink-0 stroke-current" fill="none" viewBox="0 0 24 24">
		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
	</svg>
}

templ warningIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 shrink-0 stroke-current" fill="none" viewBox="0 0 24 24">
		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
	</svg>
}

templ errorIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 shrink-0 stroke-current" fill="none" viewBox="0 0 24 24">
		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
	</svg>
}

templ Flashes() {
	{{
	request := html.RequestFromContext(ctx)
	if request == nil {
		return errors.New("request not found in context")
	}
	response := html.ResponseFromContext(ctx)
	if response == nil {
		return errors.New("response not found in context")
	}
	flashes, err := html.PopFlashes(request, response)
	if err != nil {
		return fmt.Errorf("unable to pop flash messages: %w", err)
	}
	}}
	if len(flashes) > 0 {
		<div class="m-2">
			@renderFlashes(flashes)
		</div>
	}
}

templ renderFlashes(flashes []html.Flash) {
	for _, flash := range flashes {
		<div role="alert" class={ "alert", "alert-soft", flashColors[flash.Type] }>
			@flashIcons[flash.Type]
			<span>
				@templ.Raw(flash.Message)
			</span>
		</div>
	}
}
