// Code generated by "go generate"; DO NOT EDIT.

package paths

import (
	"fmt"

	"github.com/leg100/otf/internal/resource"
)

func Workspaces(organization resource.ID) string {
	return fmt.Sprintf("/app/organizations/%s/workspaces", organization)
}

func CreateWorkspace(organization resource.ID) string {
	return fmt.Sprintf("/app/organizations/%s/workspaces/create", organization)
}

func NewWorkspace(organization resource.ID) string {
	return fmt.Sprintf("/app/organizations/%s/workspaces/new", organization)
}

func Workspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s", workspace)
}

func EditWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/edit", workspace)
}

func UpdateWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/update", workspace)
}

func DeleteWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/delete", workspace)
}

func LockWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/lock", workspace)
}

func UnlockWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/unlock", workspace)
}

func ForceUnlockWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/force-unlock", workspace)
}

func SetPermissionWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/set-permission", workspace)
}

func UnsetPermissionWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/unset-permission", workspace)
}

func WatchWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/watch", workspace)
}

func WatchWorkspaces(organization resource.ID) string {
	return fmt.Sprintf("/app/organizations/%s/workspaces/watch", organization)
}

func ConnectWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/connect", workspace)
}

func DisconnectWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/disconnect", workspace)
}

func StartRunWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/start-run", workspace)
}

func SetupConnectionProviderWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/setup-connection-provider", workspace)
}

func SetupConnectionRepoWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/setup-connection-repo", workspace)
}

func CreateTagWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/create-tag", workspace)
}

func DeleteTagWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/delete-tag", workspace)
}

func StateWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/state", workspace)
}

func PoolsWorkspace(workspace resource.ID) string {
	return fmt.Sprintf("/app/workspaces/%s/pools", workspace)
}
