package variable

type formProps struct {
	variable *Variable
	edit     bool
	action   templ.SafeURL
}

// form for editing a variable.
templ form(props formProps) {
	<form class="flex flex-col gap-5" action={ props.action } method="POST">
		<div class="field">
			<label class="font-semibold" for="key">Key</label>
			<input class="text-input" type="text" name="key" id="key" value={ props.variable.Key } required placeholder="key" disabled?={ props.variable.Sensitive && props.edit }/>
		</div>
		<div class="field">
			<label class="font-semibold" for="value">Value</label>
			<textarea
				class="text-input"
				type="text"
				name="value"
				id="value"
				if props.variable.Sensitive {
					placeholder="hidden"
				}
			>
				if !props.variable.Sensitive {
					{ props.variable.Value }
				}
			</textarea>
		</div>
		<fieldset class="border border-slate-900 px-3 py-3 flex flex-col gap-2">
			<legend>Category</legend>
			<div class="form-checkbox">
				<input type="radio" name="category" id="terraform" value="terraform" checked?={ props.variable.Category == "terraform" } disabled?={ props.variable.Sensitive && props.edit } required/>
				<label for="terraform">Terraform</label>
				<span class="description">These variables should match the declarations in your configuration. Click the HCL box to use interpolation or set a non-string value.</span>
			</div>
			<div class="form-checkbox">
				<input type="radio" name="category" id="env" value="env" checked?={ props.variable.Category == "env" } disabled?={ props.variable.Sensitive && props.edit } required/>
				<label for="env">Environment variable</label>
				<span class="description">These variables are available in the Terraform runtime environment.</span>
			</div>
		</fieldset>
		<div class="form-checkbox">
			<input class="" type="checkbox" name="hcl" id="hcl" checked?={ props.variable.HCL } disabled?={ props.variable.Sensitive && props.edit }/>
			<label for="hcl">HCL</label>
			<span class="description">Parse this field as HashiCorp Configuration Language (HCL). This allows you to interpolate values at runtime.</span>
		</div>
		<div class="form-checkbox">
			<input type="checkbox" name="sensitive" id="sensitive" checked?={ props.variable.Sensitive } disabled?={ props.variable.Sensitive && props.edit }/>
			<label for="sensitive">Sensitive</label>
			<span class="description">Sensitive variables are never shown in the UI or API. They may appear in Terraform logs if your configuration is designed to output them.</span>
		</div>
		<div class="field">
			<label class="font-semibold" for="description">Description</label>
			<input class="text-input" type="text" class="freeform" name="description" id="description" value={ props.variable.Description } placeholder="description (optional)"/>
		</div>
		<div>
			<button class="btn" id="save-variable-button">
				Save variable
			</button>
		</div>
	</form>
	<hr class="my-5"/>
	<div class="flex flex-col gap-2">
		<h4 class="font-semibold">Sensitive variables</h4>
		Sensitive variables are never shown in the UI or API. Other than changing its value, you cannot make changes to a sensitive variable; you'll need to delete and re-create the variable.
	</div>
}
