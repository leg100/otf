package user

import (
	"github.com/leg100/otf/internal"
	"github.com/leg100/otf/internal/http/html/components"
	"github.com/leg100/otf/internal/http/html/components/paths"
	"time"
)

templ adminLogin() {
	@components.BareLayout(components.BareLayoutProps{
		Title: "site admin login",
	}) {
		<div class="m-auto">
			<form class="flex flex-col gap-2" action="/admin/login" method="POST">
				<div class="field">
					<label for="token">Site Admin Token</label>
					<input class="text-input w-80" type="password" name="token" id="token" required/>
				</div>
				<div>
					<button class="btn">Login</button>
				</div>
			</form>
		</div>
	}
}

templ profile() {
	@components.Layout(components.LayoutProps{
		Title:        "profile",
		ContentLinks: profileLinks(),
	}) {
		<p>You are logged in as <span class="bg-gray-200">{ components.CurrentUsername(ctx) }</span></p>
		<br/>
		<form action={ paths.Logout() } method="POST">
			<button class="btn" id="logout">logout</button>
		</form>
	}
}

templ profileLinks() {
	<div id="user-tokens-link">
		<a href={ paths.Tokens() }>tokens</a>
	</div>
}

templ newToken() {
	@components.Layout(components.LayoutProps{
		Title: "new user token",
		Breadcrumbs: []components.Breadcrumb{
			{Name: "profile", Link: paths.Profile()},
			{Name: "tokens", Link: paths.Tokens()},
			{Name: "new"},
		},
	}) {
		<form class="flex flex-col gap-2" action={ paths.CreateToken() } method="POST">
			<div class="field">
				<label for="description">Description</label>
				<textarea class="text-input w-80" name="description" id="description" required></textarea>
			</div>
			<div>
				<button class="btn">Create token</button>
			</div>
		</form>
	}
}

templ tokenList(tokens []*UserToken) {
	@components.Layout(components.LayoutProps{
		Title: "user tokens",
		Breadcrumbs: []components.Breadcrumb{
			{Name: "profile", Link: paths.Profile()},
			{Name: "tokens"},
		},
		ContentLinks:   profileLinks(),
		ContentActions: tokenListActions(),
	}) {
		@components.ContentList(tokens, tokenListItem)
	}
}

templ tokenListItem(token *UserToken) {
	<div class="widget">
		<div>
			<span>{ token.Description }</span>
			<span>{ internal.Ago(time.Now(), token.CreatedAt) }</span>
		</div>
		<div>
			@components.Identifier(token.ID)
			<form action={ paths.DeleteToken() } method="POST">
				<button class="btn-danger" onclick="return confirm('Are you sure you want to delete?')">delete</button>
				<input type="hidden" name="id" value={ token.ID.String() }/>
			</form>
		</div>
	</div>
}

templ tokenListActions() {
	<form action={ paths.NewToken() } method="GET">
		<button class="btn" id="new-user-token-button">New Token</button>
	</form>
}

templ siteSettings() {
	@components.Layout(components.LayoutProps{
		Title: "site",
		Breadcrumbs: []components.Breadcrumb{
			{Name: "site settings"},
		},
		ContentLinks:   profileLinks(),
		ContentActions: tokenListActions(),
	}) {
		<div class="flex flex-col gap-2 text-lg">
			<span>
				<a href={ paths.GithubApps() }>GitHub app</a>
			</span>
		</div>
	}
}
