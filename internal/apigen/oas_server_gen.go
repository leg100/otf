// Code generated by ogen, DO NOT EDIT.

package apigen

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CreateOrganization implements createOrganization operation.
	//
	// Create a new organization.
	//
	// POST /organizations
	CreateOrganization(ctx context.Context, req *NewOrganization) (*Organization, error)
	// DeleteOrganization implements deleteOrganization operation.
	//
	// Delete an organization.
	//
	// DELETE /organizations/{name}
	DeleteOrganization(ctx context.Context, params DeleteOrganizationParams) error
	// DeleteWorkspace implements deleteWorkspace operation.
	//
	// Delete an workspace.
	//
	// DELETE /workspaces/{id}
	DeleteWorkspace(ctx context.Context, params DeleteWorkspaceParams) error
	// ForceUnlockWorkspace implements forceUnlockWorkspace operation.
	//
	// Workspace response.
	//
	// POST /workspaces/{id}/actions/force-unlock
	ForceUnlockWorkspace(ctx context.Context, params ForceUnlockWorkspaceParams) (ForceUnlockWorkspaceRes, error)
	// GetOrganization implements getOrganization operation.
	//
	// Organization response.
	//
	// GET /organizations/{name}
	GetOrganization(ctx context.Context, params GetOrganizationParams) (GetOrganizationRes, error)
	// GetWorkspace implements getWorkspace operation.
	//
	// Workspace response.
	//
	// GET /workspaces/{id}
	GetWorkspace(ctx context.Context, params GetWorkspaceParams) (GetWorkspaceRes, error)
	// GetWorkspaceByName implements getWorkspaceByName operation.
	//
	// Workspace response.
	//
	// GET /organizations/{organization}/workspaces/{name}
	GetWorkspaceByName(ctx context.Context, params GetWorkspaceByNameParams) (GetWorkspaceByNameRes, error)
	// ListWorkspaces implements listWorkspaces operation.
	//
	// Workspace responses.
	//
	// GET /organization/{organization}/workspaces
	ListWorkspaces(ctx context.Context, params ListWorkspacesParams) (ListWorkspacesRes, error)
	// LockWorkspace implements lockWorkspace operation.
	//
	// Workspace response.
	//
	// POST /workspaces/{id}/actions/lock
	LockWorkspace(ctx context.Context, params LockWorkspaceParams) (LockWorkspaceRes, error)
	// UnlockWorkspace implements unlockWorkspace operation.
	//
	// Workspace response.
	//
	// POST /workspaces/{id}/actions/unlock
	UnlockWorkspace(ctx context.Context, params UnlockWorkspaceParams) (UnlockWorkspaceRes, error)
	// UpdateWorkspace implements updateWorkspace operation.
	//
	// Workspace response.
	//
	// PATCH /workspaces/{id}
	UpdateWorkspace(ctx context.Context, req *UpdateWorkspace, params UpdateWorkspaceParams) (UpdateWorkspaceRes, error)
	// UpdateWorkspaceByName implements updateWorkspaceByName operation.
	//
	// Workspace response.
	//
	// PATCH /organizations/{organization}/workspaces/{name}
	UpdateWorkspaceByName(ctx context.Context, params UpdateWorkspaceByNameParams) (UpdateWorkspaceByNameRes, error)
	// NewError creates *ErrorStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *ErrorStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
