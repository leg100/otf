package runstatus

import (
	"github.com/leg100/otf/internal/http/html/components/paths"
	"github.com/leg100/otf/internal/resource"
	"slices"
	"strings"
)

var ThemeMappings = map[Status]string{
	Applied:            "success",
	ApplyQueued:        "secondary",
	Applying:           "accent",
	Canceled:           "warning",
	Confirmed:          "info",
	Discarded:          "warning",
	Errored:            "error",
	ForceCanceled:      "warning",
	Pending:            "primary",
	PlanQueued:         "secondary",
	Planned:            "info",
	PlannedAndFinished: "success",
	Planning:           "primary",
}

templ Badge(runID resource.ID, status Status) {
	<span id={ runID.String() + "-status" } class={ "run-status text-lg badge", "badge-" + status.String() }>
		<a href={ paths.Run(runID.String()) }>{ strings.ReplaceAll(string(status), "_", " ") }</a>
	</span>
}

templ Filter(selected []Status, visible bool) {
	<div tabindex="0" class="collapse collapse-arrow bg-base-100 border-base-300 border">
		<input id="toggle-status-filter-visibility" type="checkbox" name="status_filter_visible" checked?={ visible }/>
		<div class="collapse-title font-semibold">Filter by status</div>
		<div class="collapse-content text-sm flex flex-wrap gap-2">
			for _, status := range All() {
				<div>
					<input
						class={ "checkbox", "checkbox-" + status.String() }
						id={ "filter-status-" + status.String() }
						type="checkbox"
						name="search[status]"
						value={ string(status) }
						checked?={ slices.Contains(selected, status) }
						onchange="this.form.submit()"
					/>
					<label class={ "badge", "badge-" + status.String() } for={ "filter-status-" + status.String() }>
						{ strings.ReplaceAll(string(status), "_", " ") }
					</label>
				</div>
			}
		</div>
	</div>
}
