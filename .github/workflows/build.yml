name: build

on:
  push:
    branches:
      - master
    tags:
      - v*.*.*
  pull_request:
    branches:
      - '*'

jobs:
  build:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest
    # Service containers to run with `goreleaser`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      # for unit, go-tfe and e2e tests
      OTF_TEST_DATABASE_URL: postgres://postgres:postgres@localhost/postgres?sslmode=disable
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      -
        name: Unit tests
        run: |
          make unit
      -
        name: E2E tests
        run: |
          sudo cp e2e/fixtures/cert.crt /usr/local/share/ca-certificates
          sudo update-ca-certificates
          make e2e go-tfe-tests
        env:
          OTF_SECRET: 783aaea8e77db6784c313a94d0c8efda86265de9d93677ea4b6d98c6c3e6fae4
      -
        name: Archive E2E screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-screenshots
          path: e2e/screenshots/**/*.png
      -
        name: Login to docker hub
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u leg100 --password-stdin
      -
        name: Build bins and release
        if: "startsWith(github.ref, 'refs/tags/v')"
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --rm-dist --skip-sign
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
